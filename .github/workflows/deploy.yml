name: Deploy Bot

on:
  push:
    branches:
      - master  # Запускать при push в основную ветку

jobs:
  delete-old-artifacts:
    runs-on: ubuntu-latest
    env:
      IMAGE: schedule_bot
      TAG: latest
      CONTAINER: ScheduleBot
    steps:
      - name: Remove old container
        run: |
          CONTAINER_ID=$(docker ps -q --filter "name=$CONTAINER")
          if [ -n "$CONTAINER_ID" ]; then
            echo "Removing old container $CONTAINER"
            docker rm -f $CONTAINER
          else
            echo "Container does not exist"
          fi
      - name: Remove old image
        run: |
          IMAGE_ID=$(docker images -q $IMAGE:$TAG)
          if [ -n "$IMAGE_ID" ]; then
            echo "Removing old image $IMAGE:$TAG"
            docker rmi $IMAGE:$TAG
          else
            echo "Image does not exist"
          fi

  build:
    runs-on: ubuntu-latest
    env:
      IMAGE: schedule_bot
      TAG: latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t $IMAGE:$TAG .

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Запускать после успешной сборки
    env:
      IMAGE: schedule_bot
      TAG: latest
    steps:
      - name: Run container
        run: |
          docker run --restart always \
          -v $PWD/logs:/app/utils/log \
          -v $PWD/bot-config:/app/config \
          -m 128M \
          --name ScheduleBot -d $IMAGE:$TAG